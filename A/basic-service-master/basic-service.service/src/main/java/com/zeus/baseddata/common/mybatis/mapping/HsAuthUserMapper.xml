<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zeus.baseddata.common.mybatis.dao.HsAuthUserMapper" >
  <resultMap id="BaseResultMap" type="com.zeus.baseddata.mybatis.model.user.HsAuthUser" >
    <id column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_pwd" property="userPwd" jdbcType="VARCHAR" />
    <result column="user_type" property="userType" jdbcType="INTEGER" />
    <result column="employee_id" property="employeeId" jdbcType="BIGINT" />
    <result column="bl_oa" property="blOa" jdbcType="INTEGER" />
    <result column="pda_pwd" property="pdaPwd" jdbcType="VARCHAR" />
    <result column="expire_date" property="expireDate" jdbcType="TIMESTAMP" />
    <result column="failure_times" property="failureTimes" jdbcType="INTEGER" />
    <result column="message_interval" property="messageInterval" jdbcType="INTEGER" />
    <result column="last_operate_time" property="lastOperateTime" jdbcType="TIMESTAMP" />
    <result column="last_operate_ip" property="lastOperateIp" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="created_by" property="createdBy" jdbcType="BIGINT" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="modified_by" property="modifiedBy" jdbcType="BIGINT" />
    <result column="modified_time" property="modifiedTime" jdbcType="TIMESTAMP" />
    <result column="rd_status" property="rdStatus" jdbcType="INTEGER" />
    <result column="tenant_id" property="tenantId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_id, user_name, user_pwd, user_type, employee_id, bl_oa, pda_pwd, expire_date, 
    failure_times, message_interval, last_operate_time, last_operate_ip, remark, status, 
    created_by, created_time, modified_by, modified_time, rd_status, tenant_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zeus.baseddata.mybatis.model.user.HsAuthUserCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hs_auth_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from hs_auth_user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from hs_auth_user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.zeus.baseddata.mybatis.model.user.HsAuthUserCriteria" >
    delete from hs_auth_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zeus.baseddata.mybatis.model.user.HsAuthUser" >
    insert into hs_auth_user (user_id, user_name, user_pwd, 
      user_type, employee_id, bl_oa, 
      pda_pwd, expire_date, failure_times, 
      message_interval, last_operate_time, last_operate_ip, 
      remark, status, created_by, 
      created_time, modified_by, modified_time, 
      rd_status, tenant_id)
    values (#{userId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{userPwd,jdbcType=VARCHAR}, 
      #{userType,jdbcType=INTEGER}, #{employeeId,jdbcType=BIGINT}, #{blOa,jdbcType=INTEGER}, 
      #{pdaPwd,jdbcType=VARCHAR}, #{expireDate,jdbcType=TIMESTAMP}, #{failureTimes,jdbcType=INTEGER}, 
      #{messageInterval,jdbcType=INTEGER}, #{lastOperateTime,jdbcType=TIMESTAMP}, #{lastOperateIp,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{createdBy,jdbcType=BIGINT}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{modifiedBy,jdbcType=BIGINT}, #{modifiedTime,jdbcType=TIMESTAMP}, 
      #{rdStatus,jdbcType=INTEGER}, #{tenantId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zeus.baseddata.mybatis.model.user.HsAuthUser" >
    insert into hs_auth_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="userPwd != null" >
        user_pwd,
      </if>
      <if test="userType != null" >
        user_type,
      </if>
      <if test="employeeId != null" >
        employee_id,
      </if>
      <if test="blOa != null" >
        bl_oa,
      </if>
      <if test="pdaPwd != null" >
        pda_pwd,
      </if>
      <if test="expireDate != null" >
        expire_date,
      </if>
      <if test="failureTimes != null" >
        failure_times,
      </if>
      <if test="messageInterval != null" >
        message_interval,
      </if>
      <if test="lastOperateTime != null" >
        last_operate_time,
      </if>
      <if test="lastOperateIp != null" >
        last_operate_ip,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createdBy != null" >
        created_by,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="modifiedBy != null" >
        modified_by,
      </if>
      <if test="modifiedTime != null" >
        modified_time,
      </if>
      <if test="rdStatus != null" >
        rd_status,
      </if>
      <if test="tenantId != null" >
        tenant_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null" >
        #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="userType != null" >
        #{userType,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null" >
        #{employeeId,jdbcType=BIGINT},
      </if>
      <if test="blOa != null" >
        #{blOa,jdbcType=INTEGER},
      </if>
      <if test="pdaPwd != null" >
        #{pdaPwd,jdbcType=VARCHAR},
      </if>
      <if test="expireDate != null" >
        #{expireDate,jdbcType=TIMESTAMP},
      </if>
      <if test="failureTimes != null" >
        #{failureTimes,jdbcType=INTEGER},
      </if>
      <if test="messageInterval != null" >
        #{messageInterval,jdbcType=INTEGER},
      </if>
      <if test="lastOperateTime != null" >
        #{lastOperateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastOperateIp != null" >
        #{lastOperateIp,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null" >
        #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedBy != null" >
        #{modifiedBy,jdbcType=BIGINT},
      </if>
      <if test="modifiedTime != null" >
        #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rdStatus != null" >
        #{rdStatus,jdbcType=INTEGER},
      </if>
      <if test="tenantId != null" >
        #{tenantId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zeus.baseddata.mybatis.model.user.HsAuthUserCriteria" resultType="java.lang.Integer" >
    select count(*) from hs_auth_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update hs_auth_user
    <set >
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userPwd != null" >
        user_pwd = #{record.userPwd,jdbcType=VARCHAR},
      </if>
      <if test="record.userType != null" >
        user_type = #{record.userType,jdbcType=INTEGER},
      </if>
      <if test="record.employeeId != null" >
        employee_id = #{record.employeeId,jdbcType=BIGINT},
      </if>
      <if test="record.blOa != null" >
        bl_oa = #{record.blOa,jdbcType=INTEGER},
      </if>
      <if test="record.pdaPwd != null" >
        pda_pwd = #{record.pdaPwd,jdbcType=VARCHAR},
      </if>
      <if test="record.expireDate != null" >
        expire_date = #{record.expireDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.failureTimes != null" >
        failure_times = #{record.failureTimes,jdbcType=INTEGER},
      </if>
      <if test="record.messageInterval != null" >
        message_interval = #{record.messageInterval,jdbcType=INTEGER},
      </if>
      <if test="record.lastOperateTime != null" >
        last_operate_time = #{record.lastOperateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastOperateIp != null" >
        last_operate_ip = #{record.lastOperateIp,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.createdBy != null" >
        created_by = #{record.createdBy,jdbcType=BIGINT},
      </if>
      <if test="record.createdTime != null" >
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedBy != null" >
        modified_by = #{record.modifiedBy,jdbcType=BIGINT},
      </if>
      <if test="record.modifiedTime != null" >
        modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rdStatus != null" >
        rd_status = #{record.rdStatus,jdbcType=INTEGER},
      </if>
      <if test="record.tenantId != null" >
        tenant_id = #{record.tenantId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update hs_auth_user
    set user_id = #{record.userId,jdbcType=BIGINT},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_pwd = #{record.userPwd,jdbcType=VARCHAR},
      user_type = #{record.userType,jdbcType=INTEGER},
      employee_id = #{record.employeeId,jdbcType=BIGINT},
      bl_oa = #{record.blOa,jdbcType=INTEGER},
      pda_pwd = #{record.pdaPwd,jdbcType=VARCHAR},
      expire_date = #{record.expireDate,jdbcType=TIMESTAMP},
      failure_times = #{record.failureTimes,jdbcType=INTEGER},
      message_interval = #{record.messageInterval,jdbcType=INTEGER},
      last_operate_time = #{record.lastOperateTime,jdbcType=TIMESTAMP},
      last_operate_ip = #{record.lastOperateIp,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      created_by = #{record.createdBy,jdbcType=BIGINT},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      modified_by = #{record.modifiedBy,jdbcType=BIGINT},
      modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      rd_status = #{record.rdStatus,jdbcType=INTEGER},
      tenant_id = #{record.tenantId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zeus.baseddata.mybatis.model.user.HsAuthUser" >
    update hs_auth_user
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null" >
        user_pwd = #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="userType != null" >
        user_type = #{userType,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null" >
        employee_id = #{employeeId,jdbcType=BIGINT},
      </if>
      <if test="blOa != null" >
        bl_oa = #{blOa,jdbcType=INTEGER},
      </if>
      <if test="pdaPwd != null" >
        pda_pwd = #{pdaPwd,jdbcType=VARCHAR},
      </if>
      <if test="expireDate != null" >
        expire_date = #{expireDate,jdbcType=TIMESTAMP},
      </if>
      <if test="failureTimes != null" >
        failure_times = #{failureTimes,jdbcType=INTEGER},
      </if>
      <if test="messageInterval != null" >
        message_interval = #{messageInterval,jdbcType=INTEGER},
      </if>
      <if test="lastOperateTime != null" >
        last_operate_time = #{lastOperateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastOperateIp != null" >
        last_operate_ip = #{lastOperateIp,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null" >
        created_by = #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedBy != null" >
        modified_by = #{modifiedBy,jdbcType=BIGINT},
      </if>
      <if test="modifiedTime != null" >
        modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rdStatus != null" >
        rd_status = #{rdStatus,jdbcType=INTEGER},
      </if>
      <if test="tenantId != null" >
        tenant_id = #{tenantId,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zeus.baseddata.mybatis.model.user.HsAuthUser" >
    update hs_auth_user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_pwd = #{userPwd,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=INTEGER},
      employee_id = #{employeeId,jdbcType=BIGINT},
      bl_oa = #{blOa,jdbcType=INTEGER},
      pda_pwd = #{pdaPwd,jdbcType=VARCHAR},
      expire_date = #{expireDate,jdbcType=TIMESTAMP},
      failure_times = #{failureTimes,jdbcType=INTEGER},
      message_interval = #{messageInterval,jdbcType=INTEGER},
      last_operate_time = #{lastOperateTime,jdbcType=TIMESTAMP},
      last_operate_ip = #{lastOperateIp,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      created_by = #{createdBy,jdbcType=BIGINT},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      modified_by = #{modifiedBy,jdbcType=BIGINT},
      modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      rd_status = #{rdStatus,jdbcType=INTEGER},
      tenant_id = #{tenantId,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
</mapper>