<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zeus.baseddata.common.mybatis.dao.HsAuthMenusMapper" >
  <resultMap id="BaseResultMap" type="com.zeus.baseddata.mybatis.model.user.HsAuthMenus" >
    <id column="menu_id" property="menuId" jdbcType="BIGINT" />
    <result column="menu_code" property="menuCode" jdbcType="VARCHAR" />
    <result column="menu_name" property="menuName" jdbcType="VARCHAR" />
    <result column="menu_type" property="menuType" jdbcType="VARCHAR" />
    <result column="menu_order" property="menuOrder" jdbcType="INTEGER" />
    <result column="menu_url" property="menuUrl" jdbcType="VARCHAR" />
    <result column="image_path" property="imagePath" jdbcType="VARCHAR" />
    <result column="parent_menu_id" property="parentMenuId" jdbcType="BIGINT" />
    <result column="dll_name" property="dllName" jdbcType="VARCHAR" />
    <result column="invoke_name" property="invokeName" jdbcType="VARCHAR" />
    <result column="alt_key" property="altKey" jdbcType="VARCHAR" />
    <result column="tips" property="tips" jdbcType="VARCHAR" />
    <result column="is_offline" property="isOffline" jdbcType="INTEGER" />
    <result column="is_sms_check" property="isSmsCheck" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="created_by" property="createdBy" jdbcType="BIGINT" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="modified_by" property="modifiedBy" jdbcType="BIGINT" />
    <result column="modified_time" property="modifiedTime" jdbcType="TIMESTAMP" />
    <result column="tenant_id" property="tenantId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    menu_id, menu_code, menu_name, menu_type, menu_order, menu_url, image_path, parent_menu_id, 
    dll_name, invoke_name, alt_key, tips, is_offline, is_sms_check, remark, created_by, 
    created_time, modified_by, modified_time, tenant_id, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zeus.baseddata.mybatis.model.user.HsAuthMenusCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hs_auth_menus
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from hs_auth_menus
    where menu_id = #{menuId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from hs_auth_menus
    where menu_id = #{menuId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.zeus.baseddata.mybatis.model.user.HsAuthMenusCriteria" >
    delete from hs_auth_menus
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zeus.baseddata.mybatis.model.user.HsAuthMenus" >
    insert into hs_auth_menus (menu_id, menu_code, menu_name, 
      menu_type, menu_order, menu_url, 
      image_path, parent_menu_id, dll_name, 
      invoke_name, alt_key, tips, 
      is_offline, is_sms_check, remark, 
      created_by, created_time, modified_by, 
      modified_time, tenant_id, status
      )
    values (#{menuId,jdbcType=BIGINT}, #{menuCode,jdbcType=VARCHAR}, #{menuName,jdbcType=VARCHAR}, 
      #{menuType,jdbcType=VARCHAR}, #{menuOrder,jdbcType=INTEGER}, #{menuUrl,jdbcType=VARCHAR}, 
      #{imagePath,jdbcType=VARCHAR}, #{parentMenuId,jdbcType=BIGINT}, #{dllName,jdbcType=VARCHAR}, 
      #{invokeName,jdbcType=VARCHAR}, #{altKey,jdbcType=VARCHAR}, #{tips,jdbcType=VARCHAR}, 
      #{isOffline,jdbcType=INTEGER}, #{isSmsCheck,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{createdBy,jdbcType=BIGINT}, #{createdTime,jdbcType=TIMESTAMP}, #{modifiedBy,jdbcType=BIGINT}, 
      #{modifiedTime,jdbcType=TIMESTAMP}, #{tenantId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zeus.baseddata.mybatis.model.user.HsAuthMenus" >
    insert into hs_auth_menus
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="menuId != null" >
        menu_id,
      </if>
      <if test="menuCode != null" >
        menu_code,
      </if>
      <if test="menuName != null" >
        menu_name,
      </if>
      <if test="menuType != null" >
        menu_type,
      </if>
      <if test="menuOrder != null" >
        menu_order,
      </if>
      <if test="menuUrl != null" >
        menu_url,
      </if>
      <if test="imagePath != null" >
        image_path,
      </if>
      <if test="parentMenuId != null" >
        parent_menu_id,
      </if>
      <if test="dllName != null" >
        dll_name,
      </if>
      <if test="invokeName != null" >
        invoke_name,
      </if>
      <if test="altKey != null" >
        alt_key,
      </if>
      <if test="tips != null" >
        tips,
      </if>
      <if test="isOffline != null" >
        is_offline,
      </if>
      <if test="isSmsCheck != null" >
        is_sms_check,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createdBy != null" >
        created_by,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="modifiedBy != null" >
        modified_by,
      </if>
      <if test="modifiedTime != null" >
        modified_time,
      </if>
      <if test="tenantId != null" >
        tenant_id,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="menuId != null" >
        #{menuId,jdbcType=BIGINT},
      </if>
      <if test="menuCode != null" >
        #{menuCode,jdbcType=VARCHAR},
      </if>
      <if test="menuName != null" >
        #{menuName,jdbcType=VARCHAR},
      </if>
      <if test="menuType != null" >
        #{menuType,jdbcType=VARCHAR},
      </if>
      <if test="menuOrder != null" >
        #{menuOrder,jdbcType=INTEGER},
      </if>
      <if test="menuUrl != null" >
        #{menuUrl,jdbcType=VARCHAR},
      </if>
      <if test="imagePath != null" >
        #{imagePath,jdbcType=VARCHAR},
      </if>
      <if test="parentMenuId != null" >
        #{parentMenuId,jdbcType=BIGINT},
      </if>
      <if test="dllName != null" >
        #{dllName,jdbcType=VARCHAR},
      </if>
      <if test="invokeName != null" >
        #{invokeName,jdbcType=VARCHAR},
      </if>
      <if test="altKey != null" >
        #{altKey,jdbcType=VARCHAR},
      </if>
      <if test="tips != null" >
        #{tips,jdbcType=VARCHAR},
      </if>
      <if test="isOffline != null" >
        #{isOffline,jdbcType=INTEGER},
      </if>
      <if test="isSmsCheck != null" >
        #{isSmsCheck,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null" >
        #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedBy != null" >
        #{modifiedBy,jdbcType=BIGINT},
      </if>
      <if test="modifiedTime != null" >
        #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tenantId != null" >
        #{tenantId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zeus.baseddata.mybatis.model.user.HsAuthMenusCriteria" resultType="java.lang.Integer" >
    select count(*) from hs_auth_menus
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update hs_auth_menus
    <set >
      <if test="record.menuId != null" >
        menu_id = #{record.menuId,jdbcType=BIGINT},
      </if>
      <if test="record.menuCode != null" >
        menu_code = #{record.menuCode,jdbcType=VARCHAR},
      </if>
      <if test="record.menuName != null" >
        menu_name = #{record.menuName,jdbcType=VARCHAR},
      </if>
      <if test="record.menuType != null" >
        menu_type = #{record.menuType,jdbcType=VARCHAR},
      </if>
      <if test="record.menuOrder != null" >
        menu_order = #{record.menuOrder,jdbcType=INTEGER},
      </if>
      <if test="record.menuUrl != null" >
        menu_url = #{record.menuUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.imagePath != null" >
        image_path = #{record.imagePath,jdbcType=VARCHAR},
      </if>
      <if test="record.parentMenuId != null" >
        parent_menu_id = #{record.parentMenuId,jdbcType=BIGINT},
      </if>
      <if test="record.dllName != null" >
        dll_name = #{record.dllName,jdbcType=VARCHAR},
      </if>
      <if test="record.invokeName != null" >
        invoke_name = #{record.invokeName,jdbcType=VARCHAR},
      </if>
      <if test="record.altKey != null" >
        alt_key = #{record.altKey,jdbcType=VARCHAR},
      </if>
      <if test="record.tips != null" >
        tips = #{record.tips,jdbcType=VARCHAR},
      </if>
      <if test="record.isOffline != null" >
        is_offline = #{record.isOffline,jdbcType=INTEGER},
      </if>
      <if test="record.isSmsCheck != null" >
        is_sms_check = #{record.isSmsCheck,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createdBy != null" >
        created_by = #{record.createdBy,jdbcType=BIGINT},
      </if>
      <if test="record.createdTime != null" >
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedBy != null" >
        modified_by = #{record.modifiedBy,jdbcType=BIGINT},
      </if>
      <if test="record.modifiedTime != null" >
        modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tenantId != null" >
        tenant_id = #{record.tenantId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update hs_auth_menus
    set menu_id = #{record.menuId,jdbcType=BIGINT},
      menu_code = #{record.menuCode,jdbcType=VARCHAR},
      menu_name = #{record.menuName,jdbcType=VARCHAR},
      menu_type = #{record.menuType,jdbcType=VARCHAR},
      menu_order = #{record.menuOrder,jdbcType=INTEGER},
      menu_url = #{record.menuUrl,jdbcType=VARCHAR},
      image_path = #{record.imagePath,jdbcType=VARCHAR},
      parent_menu_id = #{record.parentMenuId,jdbcType=BIGINT},
      dll_name = #{record.dllName,jdbcType=VARCHAR},
      invoke_name = #{record.invokeName,jdbcType=VARCHAR},
      alt_key = #{record.altKey,jdbcType=VARCHAR},
      tips = #{record.tips,jdbcType=VARCHAR},
      is_offline = #{record.isOffline,jdbcType=INTEGER},
      is_sms_check = #{record.isSmsCheck,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      created_by = #{record.createdBy,jdbcType=BIGINT},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      modified_by = #{record.modifiedBy,jdbcType=BIGINT},
      modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      tenant_id = #{record.tenantId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zeus.baseddata.mybatis.model.user.HsAuthMenus" >
    update hs_auth_menus
    <set >
      <if test="menuCode != null" >
        menu_code = #{menuCode,jdbcType=VARCHAR},
      </if>
      <if test="menuName != null" >
        menu_name = #{menuName,jdbcType=VARCHAR},
      </if>
      <if test="menuType != null" >
        menu_type = #{menuType,jdbcType=VARCHAR},
      </if>
      <if test="menuOrder != null" >
        menu_order = #{menuOrder,jdbcType=INTEGER},
      </if>
      <if test="menuUrl != null" >
        menu_url = #{menuUrl,jdbcType=VARCHAR},
      </if>
      <if test="imagePath != null" >
        image_path = #{imagePath,jdbcType=VARCHAR},
      </if>
      <if test="parentMenuId != null" >
        parent_menu_id = #{parentMenuId,jdbcType=BIGINT},
      </if>
      <if test="dllName != null" >
        dll_name = #{dllName,jdbcType=VARCHAR},
      </if>
      <if test="invokeName != null" >
        invoke_name = #{invokeName,jdbcType=VARCHAR},
      </if>
      <if test="altKey != null" >
        alt_key = #{altKey,jdbcType=VARCHAR},
      </if>
      <if test="tips != null" >
        tips = #{tips,jdbcType=VARCHAR},
      </if>
      <if test="isOffline != null" >
        is_offline = #{isOffline,jdbcType=INTEGER},
      </if>
      <if test="isSmsCheck != null" >
        is_sms_check = #{isSmsCheck,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null" >
        created_by = #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedBy != null" >
        modified_by = #{modifiedBy,jdbcType=BIGINT},
      </if>
      <if test="modifiedTime != null" >
        modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tenantId != null" >
        tenant_id = #{tenantId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where menu_id = #{menuId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zeus.baseddata.mybatis.model.user.HsAuthMenus" >
    update hs_auth_menus
    set menu_code = #{menuCode,jdbcType=VARCHAR},
      menu_name = #{menuName,jdbcType=VARCHAR},
      menu_type = #{menuType,jdbcType=VARCHAR},
      menu_order = #{menuOrder,jdbcType=INTEGER},
      menu_url = #{menuUrl,jdbcType=VARCHAR},
      image_path = #{imagePath,jdbcType=VARCHAR},
      parent_menu_id = #{parentMenuId,jdbcType=BIGINT},
      dll_name = #{dllName,jdbcType=VARCHAR},
      invoke_name = #{invokeName,jdbcType=VARCHAR},
      alt_key = #{altKey,jdbcType=VARCHAR},
      tips = #{tips,jdbcType=VARCHAR},
      is_offline = #{isOffline,jdbcType=INTEGER},
      is_sms_check = #{isSmsCheck,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      created_by = #{createdBy,jdbcType=BIGINT},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      modified_by = #{modifiedBy,jdbcType=BIGINT},
      modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      tenant_id = #{tenantId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where menu_id = #{menuId,jdbcType=BIGINT}
  </update>
</mapper>