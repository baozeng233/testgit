<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zeus.baseddata.common.mybatis.dao.HsBasicBankAccountMapper" >
  <resultMap id="BaseResultMap" type="com.zeus.baseddata.mybatis.model.based.HsBasicBankAccount" >
    <id column="account_id" property="accountId" jdbcType="BIGINT" />
    <result column="account_code" property="accountCode" jdbcType="VARCHAR" />
    <result column="account_name" property="accountName" jdbcType="VARCHAR" />
    <result column="account_pinyin" property="accountPinyin" jdbcType="VARCHAR" />
    <result column="account_order" property="accountOrder" jdbcType="INTEGER" />
    <result column="parent_bank_id" property="parentBankId" jdbcType="BIGINT" />
    <result column="city_id" property="cityId" jdbcType="BIGINT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="created_by" property="createdBy" jdbcType="BIGINT" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="modified_by" property="modifiedBy" jdbcType="BIGINT" />
    <result column="modified_time" property="modifiedTime" jdbcType="TIMESTAMP" />
    <result column="rd_status" property="rdStatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    account_id, account_code, account_name, account_pinyin, account_order, parent_bank_id, 
    city_id, remark, created_by, created_time, modified_by, modified_time, rd_status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zeus.baseddata.mybatis.model.based.HsBasicBankAccountCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hs_basic_bank_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from hs_basic_bank_account
    where account_id = #{accountId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from hs_basic_bank_account
    where account_id = #{accountId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.zeus.baseddata.mybatis.model.based.HsBasicBankAccountCriteria" >
    delete from hs_basic_bank_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zeus.baseddata.mybatis.model.based.HsBasicBankAccount" >
    insert into hs_basic_bank_account (account_id, account_code, account_name, 
      account_pinyin, account_order, parent_bank_id, 
      city_id, remark, created_by, 
      created_time, modified_by, modified_time, 
      rd_status)
    values (#{accountId,jdbcType=BIGINT}, #{accountCode,jdbcType=VARCHAR}, #{accountName,jdbcType=VARCHAR}, 
      #{accountPinyin,jdbcType=VARCHAR}, #{accountOrder,jdbcType=INTEGER}, #{parentBankId,jdbcType=BIGINT}, 
      #{cityId,jdbcType=BIGINT}, #{remark,jdbcType=VARCHAR}, #{createdBy,jdbcType=BIGINT}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{modifiedBy,jdbcType=BIGINT}, #{modifiedTime,jdbcType=TIMESTAMP}, 
      #{rdStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zeus.baseddata.mybatis.model.based.HsBasicBankAccount" >
    insert into hs_basic_bank_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="accountCode != null" >
        account_code,
      </if>
      <if test="accountName != null" >
        account_name,
      </if>
      <if test="accountPinyin != null" >
        account_pinyin,
      </if>
      <if test="accountOrder != null" >
        account_order,
      </if>
      <if test="parentBankId != null" >
        parent_bank_id,
      </if>
      <if test="cityId != null" >
        city_id,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createdBy != null" >
        created_by,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="modifiedBy != null" >
        modified_by,
      </if>
      <if test="modifiedTime != null" >
        modified_time,
      </if>
      <if test="rdStatus != null" >
        rd_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="accountId != null" >
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="accountCode != null" >
        #{accountCode,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null" >
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="accountPinyin != null" >
        #{accountPinyin,jdbcType=VARCHAR},
      </if>
      <if test="accountOrder != null" >
        #{accountOrder,jdbcType=INTEGER},
      </if>
      <if test="parentBankId != null" >
        #{parentBankId,jdbcType=BIGINT},
      </if>
      <if test="cityId != null" >
        #{cityId,jdbcType=BIGINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null" >
        #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedBy != null" >
        #{modifiedBy,jdbcType=BIGINT},
      </if>
      <if test="modifiedTime != null" >
        #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rdStatus != null" >
        #{rdStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zeus.baseddata.mybatis.model.based.HsBasicBankAccountCriteria" resultType="java.lang.Integer" >
    select count(*) from hs_basic_bank_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update hs_basic_bank_account
    <set >
      <if test="record.accountId != null" >
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.accountCode != null" >
        account_code = #{record.accountCode,jdbcType=VARCHAR},
      </if>
      <if test="record.accountName != null" >
        account_name = #{record.accountName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountPinyin != null" >
        account_pinyin = #{record.accountPinyin,jdbcType=VARCHAR},
      </if>
      <if test="record.accountOrder != null" >
        account_order = #{record.accountOrder,jdbcType=INTEGER},
      </if>
      <if test="record.parentBankId != null" >
        parent_bank_id = #{record.parentBankId,jdbcType=BIGINT},
      </if>
      <if test="record.cityId != null" >
        city_id = #{record.cityId,jdbcType=BIGINT},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createdBy != null" >
        created_by = #{record.createdBy,jdbcType=BIGINT},
      </if>
      <if test="record.createdTime != null" >
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedBy != null" >
        modified_by = #{record.modifiedBy,jdbcType=BIGINT},
      </if>
      <if test="record.modifiedTime != null" >
        modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rdStatus != null" >
        rd_status = #{record.rdStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update hs_basic_bank_account
    set account_id = #{record.accountId,jdbcType=BIGINT},
      account_code = #{record.accountCode,jdbcType=VARCHAR},
      account_name = #{record.accountName,jdbcType=VARCHAR},
      account_pinyin = #{record.accountPinyin,jdbcType=VARCHAR},
      account_order = #{record.accountOrder,jdbcType=INTEGER},
      parent_bank_id = #{record.parentBankId,jdbcType=BIGINT},
      city_id = #{record.cityId,jdbcType=BIGINT},
      remark = #{record.remark,jdbcType=VARCHAR},
      created_by = #{record.createdBy,jdbcType=BIGINT},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      modified_by = #{record.modifiedBy,jdbcType=BIGINT},
      modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      rd_status = #{record.rdStatus,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zeus.baseddata.mybatis.model.based.HsBasicBankAccount" >
    update hs_basic_bank_account
    <set >
      <if test="accountCode != null" >
        account_code = #{accountCode,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null" >
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="accountPinyin != null" >
        account_pinyin = #{accountPinyin,jdbcType=VARCHAR},
      </if>
      <if test="accountOrder != null" >
        account_order = #{accountOrder,jdbcType=INTEGER},
      </if>
      <if test="parentBankId != null" >
        parent_bank_id = #{parentBankId,jdbcType=BIGINT},
      </if>
      <if test="cityId != null" >
        city_id = #{cityId,jdbcType=BIGINT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null" >
        created_by = #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedBy != null" >
        modified_by = #{modifiedBy,jdbcType=BIGINT},
      </if>
      <if test="modifiedTime != null" >
        modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rdStatus != null" >
        rd_status = #{rdStatus,jdbcType=INTEGER},
      </if>
    </set>
    where account_id = #{accountId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zeus.baseddata.mybatis.model.based.HsBasicBankAccount" >
    update hs_basic_bank_account
    set account_code = #{accountCode,jdbcType=VARCHAR},
      account_name = #{accountName,jdbcType=VARCHAR},
      account_pinyin = #{accountPinyin,jdbcType=VARCHAR},
      account_order = #{accountOrder,jdbcType=INTEGER},
      parent_bank_id = #{parentBankId,jdbcType=BIGINT},
      city_id = #{cityId,jdbcType=BIGINT},
      remark = #{remark,jdbcType=VARCHAR},
      created_by = #{createdBy,jdbcType=BIGINT},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      modified_by = #{modifiedBy,jdbcType=BIGINT},
      modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      rd_status = #{rdStatus,jdbcType=INTEGER}
    where account_id = #{accountId,jdbcType=BIGINT}
  </update>
</mapper>