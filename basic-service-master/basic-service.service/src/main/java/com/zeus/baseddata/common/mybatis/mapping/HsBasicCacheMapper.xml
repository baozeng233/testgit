<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zeus.baseddata.common.mybatis.dao.HsBasicCacheMapper" >
  <resultMap id="BaseResultMap" type="com.zeus.baseddata.mybatis.model.based.HsBasicCache" >
    <id column="cache_id" property="cacheId" jdbcType="BIGINT" />
    <result column="cache_code" property="cacheCode" jdbcType="VARCHAR" />
    <result column="cache_name" property="cacheName" jdbcType="VARCHAR" />
    <result column="is_enable" property="isEnable" jdbcType="INTEGER" />
    <result column="data_url" property="dataUrl" jdbcType="VARCHAR" />
    <result column="field_code" property="fieldCode" jdbcType="VARCHAR" />
    <result column="req_method" property="reqMethod" jdbcType="INTEGER" />
    <result column="created_by" property="createdBy" jdbcType="BIGINT" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="modified_by" property="modifiedBy" jdbcType="BIGINT" />
    <result column="modified_time" property="modifiedTime" jdbcType="TIMESTAMP" />
    <result column="reflush_by" property="reflushBy" jdbcType="BIGINT" />
    <result column="reflush_time" property="reflushTime" jdbcType="TIMESTAMP" />
    <result column="rd_status" property="rdStatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    cache_id, cache_code, cache_name, is_enable, data_url, field_code, req_method, created_by, 
    created_time, modified_by, modified_time, reflush_by, reflush_time, rd_status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zeus.baseddata.mybatis.model.based.HsBasicCacheCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hs_basic_cache
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from hs_basic_cache
    where cache_id = #{cacheId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from hs_basic_cache
    where cache_id = #{cacheId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.zeus.baseddata.mybatis.model.based.HsBasicCacheCriteria" >
    delete from hs_basic_cache
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zeus.baseddata.mybatis.model.based.HsBasicCache" >
    insert into hs_basic_cache (cache_id, cache_code, cache_name, 
      is_enable, data_url, field_code, 
      req_method, created_by, created_time, 
      modified_by, modified_time, reflush_by, 
      reflush_time, rd_status)
    values (#{cacheId,jdbcType=BIGINT}, #{cacheCode,jdbcType=VARCHAR}, #{cacheName,jdbcType=VARCHAR}, 
      #{isEnable,jdbcType=INTEGER}, #{dataUrl,jdbcType=VARCHAR}, #{fieldCode,jdbcType=VARCHAR}, 
      #{reqMethod,jdbcType=INTEGER}, #{createdBy,jdbcType=BIGINT}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{modifiedBy,jdbcType=BIGINT}, #{modifiedTime,jdbcType=TIMESTAMP}, #{reflushBy,jdbcType=BIGINT}, 
      #{reflushTime,jdbcType=TIMESTAMP}, #{rdStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zeus.baseddata.mybatis.model.based.HsBasicCache" >
    insert into hs_basic_cache
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="cacheId != null" >
        cache_id,
      </if>
      <if test="cacheCode != null" >
        cache_code,
      </if>
      <if test="cacheName != null" >
        cache_name,
      </if>
      <if test="isEnable != null" >
        is_enable,
      </if>
      <if test="dataUrl != null" >
        data_url,
      </if>
      <if test="fieldCode != null" >
        field_code,
      </if>
      <if test="reqMethod != null" >
        req_method,
      </if>
      <if test="createdBy != null" >
        created_by,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="modifiedBy != null" >
        modified_by,
      </if>
      <if test="modifiedTime != null" >
        modified_time,
      </if>
      <if test="reflushBy != null" >
        reflush_by,
      </if>
      <if test="reflushTime != null" >
        reflush_time,
      </if>
      <if test="rdStatus != null" >
        rd_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="cacheId != null" >
        #{cacheId,jdbcType=BIGINT},
      </if>
      <if test="cacheCode != null" >
        #{cacheCode,jdbcType=VARCHAR},
      </if>
      <if test="cacheName != null" >
        #{cacheName,jdbcType=VARCHAR},
      </if>
      <if test="isEnable != null" >
        #{isEnable,jdbcType=INTEGER},
      </if>
      <if test="dataUrl != null" >
        #{dataUrl,jdbcType=VARCHAR},
      </if>
      <if test="fieldCode != null" >
        #{fieldCode,jdbcType=VARCHAR},
      </if>
      <if test="reqMethod != null" >
        #{reqMethod,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null" >
        #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedBy != null" >
        #{modifiedBy,jdbcType=BIGINT},
      </if>
      <if test="modifiedTime != null" >
        #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reflushBy != null" >
        #{reflushBy,jdbcType=BIGINT},
      </if>
      <if test="reflushTime != null" >
        #{reflushTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rdStatus != null" >
        #{rdStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zeus.baseddata.mybatis.model.based.HsBasicCacheCriteria" resultType="java.lang.Integer" >
    select count(*) from hs_basic_cache
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update hs_basic_cache
    <set >
      <if test="record.cacheId != null" >
        cache_id = #{record.cacheId,jdbcType=BIGINT},
      </if>
      <if test="record.cacheCode != null" >
        cache_code = #{record.cacheCode,jdbcType=VARCHAR},
      </if>
      <if test="record.cacheName != null" >
        cache_name = #{record.cacheName,jdbcType=VARCHAR},
      </if>
      <if test="record.isEnable != null" >
        is_enable = #{record.isEnable,jdbcType=INTEGER},
      </if>
      <if test="record.dataUrl != null" >
        data_url = #{record.dataUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.fieldCode != null" >
        field_code = #{record.fieldCode,jdbcType=VARCHAR},
      </if>
      <if test="record.reqMethod != null" >
        req_method = #{record.reqMethod,jdbcType=INTEGER},
      </if>
      <if test="record.createdBy != null" >
        created_by = #{record.createdBy,jdbcType=BIGINT},
      </if>
      <if test="record.createdTime != null" >
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedBy != null" >
        modified_by = #{record.modifiedBy,jdbcType=BIGINT},
      </if>
      <if test="record.modifiedTime != null" >
        modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.reflushBy != null" >
        reflush_by = #{record.reflushBy,jdbcType=BIGINT},
      </if>
      <if test="record.reflushTime != null" >
        reflush_time = #{record.reflushTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rdStatus != null" >
        rd_status = #{record.rdStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update hs_basic_cache
    set cache_id = #{record.cacheId,jdbcType=BIGINT},
      cache_code = #{record.cacheCode,jdbcType=VARCHAR},
      cache_name = #{record.cacheName,jdbcType=VARCHAR},
      is_enable = #{record.isEnable,jdbcType=INTEGER},
      data_url = #{record.dataUrl,jdbcType=VARCHAR},
      field_code = #{record.fieldCode,jdbcType=VARCHAR},
      req_method = #{record.reqMethod,jdbcType=INTEGER},
      created_by = #{record.createdBy,jdbcType=BIGINT},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      modified_by = #{record.modifiedBy,jdbcType=BIGINT},
      modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      reflush_by = #{record.reflushBy,jdbcType=BIGINT},
      reflush_time = #{record.reflushTime,jdbcType=TIMESTAMP},
      rd_status = #{record.rdStatus,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zeus.baseddata.mybatis.model.based.HsBasicCache" >
    update hs_basic_cache
    <set >
      <if test="cacheCode != null" >
        cache_code = #{cacheCode,jdbcType=VARCHAR},
      </if>
      <if test="cacheName != null" >
        cache_name = #{cacheName,jdbcType=VARCHAR},
      </if>
      <if test="isEnable != null" >
        is_enable = #{isEnable,jdbcType=INTEGER},
      </if>
      <if test="dataUrl != null" >
        data_url = #{dataUrl,jdbcType=VARCHAR},
      </if>
      <if test="fieldCode != null" >
        field_code = #{fieldCode,jdbcType=VARCHAR},
      </if>
      <if test="reqMethod != null" >
        req_method = #{reqMethod,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null" >
        created_by = #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedBy != null" >
        modified_by = #{modifiedBy,jdbcType=BIGINT},
      </if>
      <if test="modifiedTime != null" >
        modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reflushBy != null" >
        reflush_by = #{reflushBy,jdbcType=BIGINT},
      </if>
      <if test="reflushTime != null" >
        reflush_time = #{reflushTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rdStatus != null" >
        rd_status = #{rdStatus,jdbcType=INTEGER},
      </if>
    </set>
    where cache_id = #{cacheId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zeus.baseddata.mybatis.model.based.HsBasicCache" >
    update hs_basic_cache
    set cache_code = #{cacheCode,jdbcType=VARCHAR},
      cache_name = #{cacheName,jdbcType=VARCHAR},
      is_enable = #{isEnable,jdbcType=INTEGER},
      data_url = #{dataUrl,jdbcType=VARCHAR},
      field_code = #{fieldCode,jdbcType=VARCHAR},
      req_method = #{reqMethod,jdbcType=INTEGER},
      created_by = #{createdBy,jdbcType=BIGINT},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      modified_by = #{modifiedBy,jdbcType=BIGINT},
      modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      reflush_by = #{reflushBy,jdbcType=BIGINT},
      reflush_time = #{reflushTime,jdbcType=TIMESTAMP},
      rd_status = #{rdStatus,jdbcType=INTEGER}
    where cache_id = #{cacheId,jdbcType=BIGINT}
  </update>
</mapper>