<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zeus.baseddata.common.mybatis.dao.HsBasicDeptMapper" >
  <resultMap id="BaseResultMap" type="com.zeus.baseddata.mybatis.model.person.HsBasicDept" >
    <id column="dept_id" property="deptId" jdbcType="BIGINT" />
    <result column="dept_code" property="deptCode" jdbcType="VARCHAR" />
    <result column="dept_name" property="deptName" jdbcType="VARCHAR" />
    <result column="dept_full_name" property="deptFullName" jdbcType="VARCHAR" />
    <result column="dept_pinyin" property="deptPinyin" jdbcType="VARCHAR" />
    <result column="dept_order" property="deptOrder" jdbcType="INTEGER" />
    <result column="site_type_id" property="siteTypeId" jdbcType="BIGINT" />
    <result column="parent_dept_id" property="parentDeptId" jdbcType="BIGINT" />
    <result column="area_level" property="areaLevel" jdbcType="INTEGER" />
    <result column="manager_employee_id" property="managerEmployeeId" jdbcType="BIGINT" />
    <result column="link_phone" property="linkPhone" jdbcType="VARCHAR" />
    <result column="fax" property="fax" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="created_by" property="createdBy" jdbcType="BIGINT" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="modified_by" property="modifiedBy" jdbcType="BIGINT" />
    <result column="modified_time" property="modifiedTime" jdbcType="TIMESTAMP" />
    <result column="rd_status" property="rdStatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    dept_id, dept_code, dept_name, dept_full_name, dept_pinyin, dept_order, site_type_id, 
    parent_dept_id, area_level, manager_employee_id, link_phone, fax, remark, created_by, 
    created_time, modified_by, modified_time, rd_status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zeus.baseddata.mybatis.model.person.HsBasicDeptCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hs_basic_dept
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from hs_basic_dept
    where dept_id = #{deptId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from hs_basic_dept
    where dept_id = #{deptId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.zeus.baseddata.mybatis.model.person.HsBasicDeptCriteria" >
    delete from hs_basic_dept
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zeus.baseddata.mybatis.model.person.HsBasicDept" >
    insert into hs_basic_dept (dept_id, dept_code, dept_name, 
      dept_full_name, dept_pinyin, dept_order, 
      site_type_id, parent_dept_id, area_level, 
      manager_employee_id, link_phone, fax, 
      remark, created_by, created_time, 
      modified_by, modified_time, rd_status
      )
    values (#{deptId,jdbcType=BIGINT}, #{deptCode,jdbcType=VARCHAR}, #{deptName,jdbcType=VARCHAR}, 
      #{deptFullName,jdbcType=VARCHAR}, #{deptPinyin,jdbcType=VARCHAR}, #{deptOrder,jdbcType=INTEGER}, 
      #{siteTypeId,jdbcType=BIGINT}, #{parentDeptId,jdbcType=BIGINT}, #{areaLevel,jdbcType=INTEGER}, 
      #{managerEmployeeId,jdbcType=BIGINT}, #{linkPhone,jdbcType=VARCHAR}, #{fax,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{createdBy,jdbcType=BIGINT}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{modifiedBy,jdbcType=BIGINT}, #{modifiedTime,jdbcType=TIMESTAMP}, #{rdStatus,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zeus.baseddata.mybatis.model.person.HsBasicDept" >
    insert into hs_basic_dept
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="deptId != null" >
        dept_id,
      </if>
      <if test="deptCode != null" >
        dept_code,
      </if>
      <if test="deptName != null" >
        dept_name,
      </if>
      <if test="deptFullName != null" >
        dept_full_name,
      </if>
      <if test="deptPinyin != null" >
        dept_pinyin,
      </if>
      <if test="deptOrder != null" >
        dept_order,
      </if>
      <if test="siteTypeId != null" >
        site_type_id,
      </if>
      <if test="parentDeptId != null" >
        parent_dept_id,
      </if>
      <if test="areaLevel != null" >
        area_level,
      </if>
      <if test="managerEmployeeId != null" >
        manager_employee_id,
      </if>
      <if test="linkPhone != null" >
        link_phone,
      </if>
      <if test="fax != null" >
        fax,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createdBy != null" >
        created_by,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="modifiedBy != null" >
        modified_by,
      </if>
      <if test="modifiedTime != null" >
        modified_time,
      </if>
      <if test="rdStatus != null" >
        rd_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="deptId != null" >
        #{deptId,jdbcType=BIGINT},
      </if>
      <if test="deptCode != null" >
        #{deptCode,jdbcType=VARCHAR},
      </if>
      <if test="deptName != null" >
        #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="deptFullName != null" >
        #{deptFullName,jdbcType=VARCHAR},
      </if>
      <if test="deptPinyin != null" >
        #{deptPinyin,jdbcType=VARCHAR},
      </if>
      <if test="deptOrder != null" >
        #{deptOrder,jdbcType=INTEGER},
      </if>
      <if test="siteTypeId != null" >
        #{siteTypeId,jdbcType=BIGINT},
      </if>
      <if test="parentDeptId != null" >
        #{parentDeptId,jdbcType=BIGINT},
      </if>
      <if test="areaLevel != null" >
        #{areaLevel,jdbcType=INTEGER},
      </if>
      <if test="managerEmployeeId != null" >
        #{managerEmployeeId,jdbcType=BIGINT},
      </if>
      <if test="linkPhone != null" >
        #{linkPhone,jdbcType=VARCHAR},
      </if>
      <if test="fax != null" >
        #{fax,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null" >
        #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedBy != null" >
        #{modifiedBy,jdbcType=BIGINT},
      </if>
      <if test="modifiedTime != null" >
        #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rdStatus != null" >
        #{rdStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zeus.baseddata.mybatis.model.person.HsBasicDeptCriteria" resultType="java.lang.Integer" >
    select count(*) from hs_basic_dept
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update hs_basic_dept
    <set >
      <if test="record.deptId != null" >
        dept_id = #{record.deptId,jdbcType=BIGINT},
      </if>
      <if test="record.deptCode != null" >
        dept_code = #{record.deptCode,jdbcType=VARCHAR},
      </if>
      <if test="record.deptName != null" >
        dept_name = #{record.deptName,jdbcType=VARCHAR},
      </if>
      <if test="record.deptFullName != null" >
        dept_full_name = #{record.deptFullName,jdbcType=VARCHAR},
      </if>
      <if test="record.deptPinyin != null" >
        dept_pinyin = #{record.deptPinyin,jdbcType=VARCHAR},
      </if>
      <if test="record.deptOrder != null" >
        dept_order = #{record.deptOrder,jdbcType=INTEGER},
      </if>
      <if test="record.siteTypeId != null" >
        site_type_id = #{record.siteTypeId,jdbcType=BIGINT},
      </if>
      <if test="record.parentDeptId != null" >
        parent_dept_id = #{record.parentDeptId,jdbcType=BIGINT},
      </if>
      <if test="record.areaLevel != null" >
        area_level = #{record.areaLevel,jdbcType=INTEGER},
      </if>
      <if test="record.managerEmployeeId != null" >
        manager_employee_id = #{record.managerEmployeeId,jdbcType=BIGINT},
      </if>
      <if test="record.linkPhone != null" >
        link_phone = #{record.linkPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.fax != null" >
        fax = #{record.fax,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createdBy != null" >
        created_by = #{record.createdBy,jdbcType=BIGINT},
      </if>
      <if test="record.createdTime != null" >
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedBy != null" >
        modified_by = #{record.modifiedBy,jdbcType=BIGINT},
      </if>
      <if test="record.modifiedTime != null" >
        modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rdStatus != null" >
        rd_status = #{record.rdStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update hs_basic_dept
    set dept_id = #{record.deptId,jdbcType=BIGINT},
      dept_code = #{record.deptCode,jdbcType=VARCHAR},
      dept_name = #{record.deptName,jdbcType=VARCHAR},
      dept_full_name = #{record.deptFullName,jdbcType=VARCHAR},
      dept_pinyin = #{record.deptPinyin,jdbcType=VARCHAR},
      dept_order = #{record.deptOrder,jdbcType=INTEGER},
      site_type_id = #{record.siteTypeId,jdbcType=BIGINT},
      parent_dept_id = #{record.parentDeptId,jdbcType=BIGINT},
      area_level = #{record.areaLevel,jdbcType=INTEGER},
      manager_employee_id = #{record.managerEmployeeId,jdbcType=BIGINT},
      link_phone = #{record.linkPhone,jdbcType=VARCHAR},
      fax = #{record.fax,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      created_by = #{record.createdBy,jdbcType=BIGINT},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      modified_by = #{record.modifiedBy,jdbcType=BIGINT},
      modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      rd_status = #{record.rdStatus,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zeus.baseddata.mybatis.model.person.HsBasicDept" >
    update hs_basic_dept
    <set >
      <if test="deptCode != null" >
        dept_code = #{deptCode,jdbcType=VARCHAR},
      </if>
      <if test="deptName != null" >
        dept_name = #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="deptFullName != null" >
        dept_full_name = #{deptFullName,jdbcType=VARCHAR},
      </if>
      <if test="deptPinyin != null" >
        dept_pinyin = #{deptPinyin,jdbcType=VARCHAR},
      </if>
      <if test="deptOrder != null" >
        dept_order = #{deptOrder,jdbcType=INTEGER},
      </if>
      <if test="siteTypeId != null" >
        site_type_id = #{siteTypeId,jdbcType=BIGINT},
      </if>
      <if test="parentDeptId != null" >
        parent_dept_id = #{parentDeptId,jdbcType=BIGINT},
      </if>
      <if test="areaLevel != null" >
        area_level = #{areaLevel,jdbcType=INTEGER},
      </if>
      <if test="managerEmployeeId != null" >
        manager_employee_id = #{managerEmployeeId,jdbcType=BIGINT},
      </if>
      <if test="linkPhone != null" >
        link_phone = #{linkPhone,jdbcType=VARCHAR},
      </if>
      <if test="fax != null" >
        fax = #{fax,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null" >
        created_by = #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedBy != null" >
        modified_by = #{modifiedBy,jdbcType=BIGINT},
      </if>
      <if test="modifiedTime != null" >
        modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rdStatus != null" >
        rd_status = #{rdStatus,jdbcType=INTEGER},
      </if>
    </set>
    where dept_id = #{deptId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zeus.baseddata.mybatis.model.person.HsBasicDept" >
    update hs_basic_dept
    set dept_code = #{deptCode,jdbcType=VARCHAR},
      dept_name = #{deptName,jdbcType=VARCHAR},
      dept_full_name = #{deptFullName,jdbcType=VARCHAR},
      dept_pinyin = #{deptPinyin,jdbcType=VARCHAR},
      dept_order = #{deptOrder,jdbcType=INTEGER},
      site_type_id = #{siteTypeId,jdbcType=BIGINT},
      parent_dept_id = #{parentDeptId,jdbcType=BIGINT},
      area_level = #{areaLevel,jdbcType=INTEGER},
      manager_employee_id = #{managerEmployeeId,jdbcType=BIGINT},
      link_phone = #{linkPhone,jdbcType=VARCHAR},
      fax = #{fax,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      created_by = #{createdBy,jdbcType=BIGINT},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      modified_by = #{modifiedBy,jdbcType=BIGINT},
      modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      rd_status = #{rdStatus,jdbcType=INTEGER}
    where dept_id = #{deptId,jdbcType=BIGINT}
  </update>
</mapper>